// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TrainMonitor.Model;

namespace TrainMonitor.Migrations
{
    [DbContext(typeof(ConnectDB))]
    [Migration("20220124170202_3")]
    partial class _3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("TrainMonitor.Model.Employee.Brigade", b =>
                {
                    b.Property<int>("Id_Brigade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("BrigadeName")
                        .HasColumnType("text");

                    b.HasKey("Id_Brigade");

                    b.ToTable("brigade");

                    b.HasData(
                        new
                        {
                            Id_Brigade = 1,
                            BrigadeName = "Пусто"
                        });
                });

            modelBuilder.Entity("TrainMonitor.Model.Employee.Department", b =>
                {
                    b.Property<int>("ID_Department")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DepartmentName")
                        .HasColumnType("text");

                    b.HasKey("ID_Department");

                    b.ToTable("department");

                    b.HasData(
                        new
                        {
                            ID_Department = 1,
                            DepartmentName = "Пусто"
                        },
                        new
                        {
                            ID_Department = 2,
                            DepartmentName = "Администратор"
                        });
                });

            modelBuilder.Entity("TrainMonitor.Model.Employee.Employee", b =>
                {
                    b.Property<int>("ID_Employee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("Birth_Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("BrigadeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Passport_Number")
                        .HasColumnType("character varying(6)")
                        .HasMaxLength(6);

                    b.Property<string>("Passport_Series")
                        .HasColumnType("character varying(4)")
                        .HasMaxLength(4);

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Patronymic")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<int>("PostId")
                        .HasColumnType("integer");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.HasKey("ID_Employee");

                    b.HasIndex("BrigadeId");

                    b.HasIndex("PostId");

                    b.ToTable("employee");

                    b.HasData(
                        new
                        {
                            ID_Employee = 1,
                            Birth_Date = new DateTime(1997, 4, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BrigadeId = 0,
                            Email = "mistred24@yandex.ru",
                            Login = "Admin",
                            Name = "Admin",
                            Passport_Number = "000000",
                            Passport_Series = "0000",
                            Password = "Admin",
                            Patronymic = "Admin",
                            PostId = 2,
                            Surname = "Admin"
                        });
                });

            modelBuilder.Entity("TrainMonitor.Model.Employee.Post", b =>
                {
                    b.Property<int>("ID_Post")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<string>("PostName")
                        .HasColumnType("text");

                    b.Property<int>("Salary")
                        .HasColumnType("integer");

                    b.HasKey("ID_Post");

                    b.HasIndex("DepartmentId");

                    b.ToTable("post");

                    b.HasData(
                        new
                        {
                            ID_Post = 1,
                            DepartmentId = 1,
                            PostName = "Пусто",
                            Salary = 0
                        },
                        new
                        {
                            ID_Post = 2,
                            DepartmentId = 2,
                            PostName = "Администратор",
                            Salary = 0
                        });
                });

            modelBuilder.Entity("TrainMonitor.Model.Employee.Employee", b =>
                {
                    b.HasOne("TrainMonitor.Model.Employee.Brigade", "Brigade")
                        .WithMany()
                        .HasForeignKey("BrigadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrainMonitor.Model.Employee.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TrainMonitor.Model.Employee.Post", b =>
                {
                    b.HasOne("TrainMonitor.Model.Employee.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
